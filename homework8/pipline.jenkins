pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "docker.elastic.co/elasticsearch/elasticsearch:8.10.0"
        CONTAINER_NAME = "elasticsearch"
        ELASTICSEARCH_URL = "http://localhost:9200"
    }


        // Этап 2: Запуск контейнера с Elasticsearch
        stage('Run Elasticsearch') {
            steps {
                script {
                    sh """
                        docker run -d \
                          --name ${CONTAINER_NAME} \
                          -p 9200:9200 \
                          -p 9300:9300 \
                          -e "discovery.type=single-node" \
                          ${DOCKER_IMAGE}
                    """
                }
            }
        }

        // Этап 3: Проверка, что Elasticsearch работает
        stage('Check Elasticsearch Health') {
            steps {
                script {
                    // Ждем, пока Elasticsearch запустится
                    sleep(time: 30, unit: 'SECONDS')

                    // Проверяем статус Elasticsearch
                    def health = sh(script: "curl -s -o /dev/null -w '%{http_code}' ${ELASTICSEARCH_URL}/_cluster/health", returnStdout: true).trim()

                    if (health != "200") {
                        error "Elasticsearch is not healthy! HTTP status: ${health}"
                    } else {
                        echo "Elasticsearch is running and healthy!"
                    }
                }
            }
        }
    }

    post {
        success {
            echo "Pipeline succeeded! Elasticsearch is up and running."
        }
        failure {
            echo "Pipeline failed! Check the logs for details."
        }
    }